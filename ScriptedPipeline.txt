node {
    
    stage('Clonando GIT') {
        checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/luanhenriquesn/DEVOPS-CP6.git']]])
    }
    
    stage('Análise(Sonar) e Build(Maven)') {
        withSonarQubeEnv('SonarQube') {
          sh '/opt/maven/bin/mvn clean package sonar:sonar'
        }
    }
    
    stage("Quality Gate") { 
        timeout(time: 45, unit: 'MINUTES') { 
            def qualityGate = waitForQualityGate() 
            if (qualityGate.status != 'OK') {
                error "O código NÃO ESTÁ DE ACORDO com as regras do Sonar: ${qualityGate.status}"
            } else {
                echo "O código está DE ACORDO com as regras do Sonar: ${qualityGate.status} !!!"
            }
        }
    }
    
    stage("Responsável pela aprovação") {
        env.RESPOSTA = input message: 'Aprova o Deploy ?', ok: 'Escolher',
        parameters: [choice(name: 'RESPOSTA', choices: 'Sim\nNão', description: 'Escolha uma das opções !!!')]
    }
    
    
    //Como não foi visto como fazer o deploy do JENKINS na AZURE, esta é uma simulação de como seria fazer o deploy no tomcat.
    //Porém, no vídeo explicativo, faremos o DEPLOY NA AZURE PELA ECLIPSE IDE, CONFORME SOLICITADO.
    stage('Deploy no TomCat') {
        if ( env.RESPOSTA == "Sim" ) {
            //Para que o arquivo war seja transferido para o tomcat, é necessário que o usuário/grupo tenha permissão de acessar a pasta do tomcat para inserir o .war. 
            sh "cp /var/lib/jenkins/workspace/PIPELINE-CP6/target/WebApp.war /opt/tomcat/webapps"
            echo "O DEPLOY FOI FEITO COM SUCESSO !"
            
        } else {
            echo "O DEPLOY FOI CANCELADO !"
        }
    }
        
    
}